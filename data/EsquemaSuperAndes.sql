-- creacion del secuenciador
CREATE SEQUENCE SUPERANDES_SEQUENCE;

--Crear tabla supermercado
CREATE TABLE A_SUPERMERCADO(
id NUMBER,
CONSTRAINT A_SUPERMERCADO_PK PRIMARY KEY(NUMBER)
);

-- Crear tabla cliente 
CREATE TABLE A_CLIENTE(
codigo NUMBER,
nombre VARCHAR(255 BYTE) NOT NULL,
correo VARCHAR(255 BYTE) NOT NULL,
puntos NUMBER,
supermercadoId NUMBER,
CONSTRAINT A_CLIENTE_PK PRIMARY KEY (codigo)
);
ALTER TABLE A_CLIENTE ADD CONSTRAINT fk_supermercado FOREIGN KEY (supermercado) REFERENCES A_SUPERMERCADO(id);

-- Crear tabla Persona
CREATE TABLE A_PERSONA(
cedula NUMBER,
clientesCodigo NUMBER NOT NULL,
CONSTRAINT A_PERSONA_PK PRIMARY KEY(cedula)
);

ALTER TABLE A_PERSONA ADD CONSTRAINT fk_clientes FOREIGN KEY (clientesCodigo) REFERENCES A_CLIENTE(codigo);


--Crear tabla empresa
CREATE TABLE A_EMPRESA(
nit VARCHAR(255 BYTE),
direccion VARCHAR(255 BYTE),
clientesCodigo NUMBER NOT NULL,
CONSTRAINT A_EMPRESA_PK PRIMARY KEY(nit)
);

ALTER TABLE A_EMPRESA ADD CONSTRAINT fk_clientes FOREIGN KEY(clientesCodigo) REFERENCES A_CLIENTE(codigo);

--Crear tabla proveedor

CREATE TABLE A_PROVEEDOR(
nit VARCHAR(255 BYTE),
nombre VARCHAR(255 BYTE) NOT NULL,
CONSTRAINT A_PROVEEDOR_PK PRIMARY KEY(nit)
); 

--Crear tabla pedido 
CREATE TABLE A_PEDIDO(
id NUMBER,
fecha DATE NOT NULL,
proveedorNit VARCHAR(255 BYTE),
supermercadoId NUMBER,
CONSTRAINT A_PEDIDO_PK PRIMARY KEY(id)
);

ALTER TABLE A_PEDIDO ADD CONSTRAINT fk_supermercado FOREIGN KEY (supermercadoId) REFERENCES A_SUPERMERCADO(id);

ALTER TABLE A_PEDIDO ADD CONSTRAINT fk_provedor FOREIGN KEY (proveedorNit) REFERENCES A_PROVEEDOR(nit);

--Crear tabla sucursales

CREATE TABLE A_SUCURSAL(
nombre VARCHAR(255 BYTE),
direccion VARCHAR(255 BYTE) NOT NULL,
ciudad VARCHAR(255 BYTE) NOT NULL,
CONSTRAINT A_SUCURSAL_PK PRIMARY KEY(nombre)
);

--Crear tabla promocion sucursal

CREATE TABLE A_PROMOCION_SUCURSAL(
id NUMBER,
fechaLimite DATE NOT NULL,
sucursalNombre VARCHAR(255 BYTE),
productoCodigo VARCHAR(255 BYTE),
CONSTRAINT A_SUCURSAL_PK PRIMARY KEY(id)
);

ALTER TABLE A_PROMOCION_SUCURSAL ADD CONSTRAINT fk_sucursal FOREIGN KEY(sucursalNombre) REFERENCES A_SUCURSAL(nombre);

ALTER TABLE A_PROMOCION_SUCURSAL ADD CONSTRAINT fk_producto FOREIGN KEY(productoCodigo)
REFERENCES A_PRODUCTO(codigoDeBarras);

--Crear tabla estantes 

CREATE TABLE A_ESTANTE(
id NUMBER,
capacidadPeso DOUBLE(3) NOT NULL,
capacidadVolumen DOUBLE(3) NOT NULL,
sucursalNombre VARCHAR(255 BYTE),
categoria VARCHAR(255 BYTE) NOT NULL,
CONSTRAINT A_ESTANTE_PK PRIMARY KEY(id)
);

ALTER TABLE A_ESTANTE ADD CONSTRAINT fk_sucursal FOREIGN KEY(sucursalNombre) REFERENCES A_SUCURSAL(nombre);

ALTER TABLE A_ESTANTE ADD CONSTRAINT CK_CATEGORIA CHECK(categoria = "CATEGORIA1" OR categoria = "CATEGORIA2" OR categoria = "CATEGORIA3" OR categoria = "CATEGORIA4" OR categoria = "CATEGORIA5");

--Crear tabla bodega

CREATE TABLE A_BODEGA(
id NUMBER,
capacidadPeso DOUBLE(3) NOT NULL,
capacidadVolumen DOUBLE(3) NOT NULL,
sucursalNombre VARCHAR(255 BYTE),
categoria VARCHAR(255 BYTE) NOT NULL,
CONSTRAINT A_BODEGA_PK PRIMARY KEY(id)
);

ALTER TABLE A_BODEGA ADD CONSTRAINT fk_sucursal FOREIGN KEY(sucursalNombre) REFERENCES A_SUCURSAL(nombre);

ALTER TABLE A_BODEGA ADD CONSTRAINT CK_CATEGORIA CHECK(categoria = "CATEGORIA1" OR categoria = "CATEGORIA2" OR categoria = "CATEGORIA3" OR categoria = "CATEGORIA4" OR categoria = "CATEGORIA5");

-Crear tabla producto

CREATE TABLE A_PRODUCTO(
codigoDeBarras VARCHAR(255 BYTE),
unidadMedida VARCHAR(255 BYTE) NOT NULL,
nombre VARCHAR(255 BYTE) NOT NULL,
marca VARCHAR(255 BYTE) NOT NULL,
precioVenta DOUBLE(9) NOT NULL,
precioCompra DOUBLE(9) NOT NULL,
presentacion VARCHAR(255 BYTE) NOT NULL,
precioXunidad DOUBLE(9) NOT NULL,
cantidad NUMBER NOT NULL,
empaque VARCHAR(255 BYTE) NOT NULL,
perecedero NUMBER NOT NULL,
categoria VARCHAR(255 BYTE) NOT NULL,
nivelReo NUMBER NOT NULL,
estantesId NUMBER,
bodegasId NUMBER,
pedidoId NUMBER,
CONSTRAINT A_PRODUCTO_PK PRIMARY KEY(codigoDeBarras)
);

ALTER TABLE A_PRODUCTO ADD CONSTRAINT fk_estantes FOREIGN KEY(estantesId) REFERENCES A_ESTANTE(id);
ALTER TABLE A_PRODUCTO ADD CONSTRAINT fk_bodegas FOREIGN KEY(bodegasId) REFERENCES A_BODEGA(id);
ALTER TABLE A_PRODUCTO ADD CONSTRAINT CK_CATEGORIA CHECK(categoria = "CATEGORIA1" OR categoria = "CATEGORIA2" OR categoria = "CATEGORIA3" OR categoria = "CATEGORIA4" OR categoria = "CATEGORIA5");
ALTER TABLE A_PRODUCTO ADD CONSTRAINT fk_pedido FOREIGN KEY(pedidoId) REFERENCES A_PEDIDO(id);
ALTER TABLE A_PRODUCTO ADD CONSTRAINT CK_NIVELREO CHECK(nivelReo>0);
ALTER TABLE A_PRODUCTO ADD CONSTRAINT CK_PRECIOVENTA CHECK(precioVenta>0);
ALTER TABLE A_PRODUCTO ADD CONSTRAINT CK_PRECIOCOMPRA CHECK(precioCompra>0);
ALTER TABLE A_PRODUCTO ADD CONSTRAINT CK_PRECIOXUNIDAD CHECK(precioXunidad>0);
ALTER TABLE A_PRODUCTO ADD CONSTRAINT CK_PERECEDERO CHECK(perecedero=1 OR perecedero=0);


--Crear tabla compra 
CREATE TABLE A_COMPRA(
productoCodigo VARCHAR(255 BYTE),
clienteId NUMBER,
factura VARCHAR(1000) NOT NULL,
total DOUBLE(10) NOT NULL,
fecha DATE NOT NULL,
CONSTRAINT A_COMPRA_PK PRIMARY KEY(factura)
);

ALTER TABLE A_COMPRA ADD CONSTRAINT fk_producto FOREIGN KEY(productoCodigo) REFERENCES A_PRODUCTO(codigoDeBarras);

ALTER TABLE A_COMPRA ADD CONSTRAINT fk_cliente FOREIGN KEY(clienteId) REFERENCES A_CLIENTE(codigo);

ALTER TABLE A_COMPRA ADD CONSTRAINT CK_TOTAL CHECK(total>0);

--Crear tabla provee

CREATE TABLE A_PROVEE(
proveedor VARCHAR(255 BYTE),
producto VARCHAR(255 BYTE),
CONSTRAINT A_PROVEE_PK PRIMARY KEY(proveedor,producto)
);
ALTER TABLE A_PROVEE ADD CONSTRAINT fk_proveedor FOREIGN KEY(proveedor) REFERENCES A_PROVEEDOR(nit);

ALTER TABLE A_PROVEE ADD CONSTRAINT fk_producto FOREIGN KEY(producto) REFERENCES A_PRODUCTO(codigoDeBarras);

--Crear tabla promocion_proveedor
CREATE TABLE A_PROMOCION_PROVEEDOR(
id NUMBER,
producto VARCHAR(255 BYTE),
proveedor VARCHAR(255 BYTE),
CONSTRAINT A_PROMOCION_PROVEEDOR_PK PRIMARY KEY(id)
);
ALTER TABLE A_PROMOCION_PROVEEDOR ADD CONSTRAINT fk_producto FOREIGN KEY(producto) REFERENCES A_PRODUCTO(codigoDeBarras);

ALTER TABLE A_PROMOCION_PROVEEDOR ADD CONSTRAINT fk_proveedor FOREIGN KEY(proveedor) REFERENCES A_PROVEEDOR(nit);

COMMIT;